/*
6.10 동적 타이핑
  6.10.1 동적 타입 언어와 정적 타입 언어
  자바스크립트의 모든 값은 데이터 타입을 갖는다. 그렇다면 변수는 데이터 타입을 가질까?
  C 나 자바 같은 '정적 타입 언어'는 변수를 선언할 때 변수에 할당할 수 있는 값의 종류(데이터 타입)을 사전에 선언해야 한다. 이것을 '명시적 타입 선언' 이라고 한다.
  정적 타입 언어는 변수의 타입을 변경할 수 없으며, 변수에 선언한 타입에 맞는 값만 할당할 수 있다.
  정적 타입 언어는 컴파일 시점에서 타입 체크(선언한 데이터 타입에 맞는 값을 할당했는지 검사하는 처리)를 수행한다. 이때 타입 체크를 통과하지 못했다면 에러를 발생시키고 프로그램의 실행 자체를 막는다.
  자바스크립트는 정적 타입 언어와 다르게 변수를 선언할 때 타입을 선언하지 않는다. 그러므로 어떠한 데이터 타입의 값이라도 자유롭게 할당할 수 있다.
  정적 타입 언어는 변수를 선언하는 시점에 변수의 타입이 결정되지만 동적 타입 언어인 자바스크립트는 변수를 할당하는 시점에 타입이 동적으로 결정되고 언제든지 타입을 자유롭게 변경할 수 있다.
  자바스크립트의 변수는 선언이 아닌 할당에 의해 타입이 결정된다. 그리고 재할당에 의해 변수의 타입은 언제든지 동적으로 변할 수 있다. 이러한 특징을 동적 타이핑이라고 한다.
  처음 질문으로 돌아가서 변수는 타입을 가질까? 기본적으로 변수는 타입을 가지지 않고 변수에 할당된 값이 타입을 가진다. 따라서 변수에 할당되어 있는 값에 의해 변수의 타입이 동적으로 결정된다고 표현하는게 정확하다.

  6.10.2 동적 타입 언어와 변수
  동적 타입 언어는 변수에 어떤 데이터 타입의 값이라도 자유롭게 할당할 수 있다. 그에 따른 동적 타입 언어 또한 구조적인 단점이 있다.
  변수 값은 언제든지 변할 수 있기 떄문에 복잡한 프로그램에서는 변화하는 변수의 값을 추적하기 어려울 수 있다.
  값의 변경에 의해 언제든지 타입도 변경될 수 있다. 따라서 동적 타입 언어의 변수는 값을 확인하기 전에는 타입을 확신할 수 없다.
  개발자의 의도와 상관없이 자바스크립트 엔진에 의해 암묵적으로 타입이 자동으로 변환되기도 하기 때문에 숫자 타입의 변수라고 생각했지만, 문자 타입의 변수일 수도 있다는 것이다. 즉, 유연성은 있지만 신뢰성은 떨어진다는 말이다.

  변수 사용 주의사항
    1. 변수는 꼭 필요한 경우에 한해 제한적으로 사용한다. 변수 값은 재할당에 의해 언제든지 변경될 수 있다. 이로 인해 동적 타입 언어인 자바스크립트는 타입을 잘못 예측해 오류가 발생할 가능성이 크다.
    변수의 개수가 많으면 많을수록 오류가 발생할 확률도 높아지기 때문에 무분별한 변수의 남발은 금물이며, 필요한 만큼 최소한으로 유지하도록 주의해야 한다.
    2. 변수의 유효 범위(스코프)는 최대한 좁게 만들어 변수의 부작용을 억제해야 한다. 변수의 유효 범위가 넓으면 넓을수록 변수로 인해 오류가 발생할 확률이 높아진다.
    3. 전역 변수는 최대한 사용하지 않도록 한다. 어디서든지 참조/변경이 가능한 전역 변수는 의도치 않게 값이 변경될 가능성이 높고 다른 코드에 영향을 줄 가능성도 높다.
    따라서 전역 변수는 프로그램의 복잡성을 증가시키고 처리 흐름을 추적하기 어렵게 만들고, 오류가 발생할 경우 오류의 원인을 특정하기 어렵게 만든다.
    4. 변수보다는 상수를 사용해 값의 변경을 억제한다.
    5. 변수 이름은 변수의 목적이나 의미를 파악할 수 있도록 네이밍 한다. 변수 이름뿐 아니라 모든 식별자(변수, 함수, 클래스 이름 등)는 존재 이유를 파악할 수 있는 적절한 이름으로 지어야 한다.
    특히 식별자의 유효범위가 넓을수록 명확한 이름을 명명하도록 노력하자. 개발자의 의도를 나타내는 명확한 네이밍은 코드를 이해하기 쉽게 만들고, 이는 협업과 생산성 향상에 도움을 준다.
*/